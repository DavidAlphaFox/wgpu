name: CTS

on:
  pull_request:
    types: [labeled, opened, synchronize]
  schedule:
    - cron: '33 2 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: false
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  MSRV: "1.84"

  # These Mesa version definitions are duplicated in the CI job.
  # Sourced from https://archive.mesa3d.org/. Bumping this requires
  # updating the mesa build in https://github.com/gfx-rs/ci-build and creating a new release.
  MESA_VERSION: "24.3.4"
  # Corresponds to https://github.com/gfx-rs/ci-build/releases
  CI_BINARY_BUILD: "build20"

jobs:
  cts:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - name: Windows x86_64
            os: windows-2022
            target: x86_64-pc-windows-msvc

          # Mac
          - name: Mac aarch64
            os: macos-14
            target: x86_64-apple-darwin

          # Linux
          - name: Linux x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu

    name: CTS ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Install Repo MSRV toolchain
        run: |
          rustup toolchain install ${{ env.MSRV }} --no-self-update --profile=minimal --target ${{ matrix.target }}
          rustup override set ${{ env.MSRV }}
          cargo -V

      - name: caching
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: v1-rust # Increment version for cache busting
          cache-directories: cts

      # We enable line numbers for panics, but that's it
      - name: disable debug
        shell: bash
        run: |
          mkdir -p .cargo
          cat <<EOF >> .cargo/config.toml
          [profile.dev]
          debug = 1
          EOF

      # This step is duplicated in the CI job.
      - name: (Linux) Install Mesa
        if: matrix.os == 'ubuntu-24.04'
        shell: bash
        run: |
          set -e

          curl -L --retry 5 https://github.com/gfx-rs/ci-build/releases/download/$CI_BINARY_BUILD/mesa-$MESA_VERSION-linux-x86_64.tar.xz -o mesa.tar.xz
          mkdir mesa
          tar xpf mesa.tar.xz -C mesa

          # The ICD provided by the mesa build is hardcoded to the build environment.
          #
          # We write out our own ICD file to point to the mesa vulkan
          cat <<- EOF > icd.json
          {
            "ICD": {
                "api_version": "1.1.255",
                "library_path": "$PWD/mesa/lib/x86_64-linux-gnu/libvulkan_lvp.so"
            },
            "file_format_version": "1.0.0"
          }
          EOF

          echo "VK_DRIVER_FILES=$PWD/icd.json" >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$PWD/mesa/lib/x86_64-linux-gnu/:$LD_LIBRARY_PATH" >> "$GITHUB_ENV"
          echo "LIBGL_DRIVERS_PATH=$PWD/mesa/lib/x86_64-linux-gnu/dri" >> "$GITHUB_ENV"

      - name: run CTS
        shell: bash
        run: cargo xtask cts
